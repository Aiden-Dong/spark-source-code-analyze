-- Automatically generated by SQLQueryTestSuite
-- Number of queries: 28


-- !query 0
CREATE DATABASE mydb1
-- !query 0 schema
struct<>
-- !query 0 output



-- !query 1
USE mydb1
-- !query 1 schema
struct<>
-- !query 1 output



-- !query 2
CREATE TABLE t1 USING parquet AS SELECT 1 AS i1
-- !query 2 schema
struct<>
-- !query 2 output



-- !query 3
CREATE DATABASE mydb2
-- !query 3 schema
struct<>
-- !query 3 output



-- !query 4
USE mydb2
-- !query 4 schema
struct<>
-- !query 4 output



-- !query 5
CREATE TABLE t1 USING parquet AS SELECT 20 AS i1
-- !query 5 schema
struct<>
-- !query 5 output



-- !query 6
SET spark.sql.crossJoin.enabled = true
-- !query 6 schema
struct<key:string,value:string>
-- !query 6 output
spark.sql.crossJoin.enabled	true


-- !query 7
USE mydb1
-- !query 7 schema
struct<>
-- !query 7 output



-- !query 8
SELECT i1 FROM t1, mydb1.t1
-- !query 8 schema
struct<>
-- !query 8 output
org.apache.spark.sql.AnalysisException
Reference 'i1' is ambiguous, could be: mydb1.t1.i1, mydb1.t1.i1.; line 1 pos 7


-- !query 9
SELECT t1.i1 FROM t1, mydb1.t1
-- !query 9 schema
struct<>
-- !query 9 output
org.apache.spark.sql.AnalysisException
Reference 't1.i1' is ambiguous, could be: mydb1.t1.i1, mydb1.t1.i1.; line 1 pos 7


-- !query 10
SELECT mydb1.t1.i1 FROM t1, mydb1.t1
-- !query 10 schema
struct<>
-- !query 10 output
org.apache.spark.sql.AnalysisException
Reference 'mydb1.t1.i1' is ambiguous, could be: mydb1.t1.i1, mydb1.t1.i1.; line 1 pos 7


-- !query 11
SELECT i1 FROM t1, mydb2.t1
-- !query 11 schema
struct<>
-- !query 11 output
org.apache.spark.sql.AnalysisException
Reference 'i1' is ambiguous, could be: mydb1.t1.i1, mydb2.t1.i1.; line 1 pos 7


-- !query 12
SELECT t1.i1 FROM t1, mydb2.t1
-- !query 12 schema
struct<>
-- !query 12 output
org.apache.spark.sql.AnalysisException
Reference 't1.i1' is ambiguous, could be: mydb1.t1.i1, mydb2.t1.i1.; line 1 pos 7


-- !query 13
USE mydb2
-- !query 13 schema
struct<>
-- !query 13 output



-- !query 14
SELECT i1 FROM t1, mydb1.t1
-- !query 14 schema
struct<>
-- !query 14 output
org.apache.spark.sql.AnalysisException
Reference 'i1' is ambiguous, could be: mydb2.t1.i1, mydb1.t1.i1.; line 1 pos 7


-- !query 15
SELECT t1.i1 FROM t1, mydb1.t1
-- !query 15 schema
struct<>
-- !query 15 output
org.apache.spark.sql.AnalysisException
Reference 't1.i1' is ambiguous, could be: mydb2.t1.i1, mydb1.t1.i1.; line 1 pos 7


-- !query 16
SELECT i1 FROM t1, mydb2.t1
-- !query 16 schema
struct<>
-- !query 16 output
org.apache.spark.sql.AnalysisException
Reference 'i1' is ambiguous, could be: mydb2.t1.i1, mydb2.t1.i1.; line 1 pos 7


-- !query 17
SELECT t1.i1 FROM t1, mydb2.t1
-- !query 17 schema
struct<>
-- !query 17 output
org.apache.spark.sql.AnalysisException
Reference 't1.i1' is ambiguous, could be: mydb2.t1.i1, mydb2.t1.i1.; line 1 pos 7


-- !query 18
SELECT db1.t1.i1 FROM t1, mydb2.t1
-- !query 18 schema
struct<>
-- !query 18 output
org.apache.spark.sql.AnalysisException
cannot resolve '`db1.t1.i1`' given input columns: [mydb2.t1.i1, mydb2.t1.i1]; line 1 pos 7


-- !query 19
SET spark.sql.crossJoin.enabled = false
-- !query 19 schema
struct<key:string,value:string>
-- !query 19 output
spark.sql.crossJoin.enabled	false


-- !query 20
USE mydb1
-- !query 20 schema
struct<>
-- !query 20 output



-- !query 21
SELECT mydb1.t1 FROM t1
-- !query 21 schema
struct<>
-- !query 21 output
org.apache.spark.sql.AnalysisException
cannot resolve '`mydb1.t1`' given input columns: [mydb1.t1.i1]; line 1 pos 7


-- !query 22
SELECT t1.x.y.* FROM t1
-- !query 22 schema
struct<>
-- !query 22 output
org.apache.spark.sql.AnalysisException
cannot resolve 't1.x.y.*' given input columns 'i1';


-- !query 23
SELECT t1 FROM mydb1.t1
-- !query 23 schema
struct<>
-- !query 23 output
org.apache.spark.sql.AnalysisException
cannot resolve '`t1`' given input columns: [mydb1.t1.i1]; line 1 pos 7


-- !query 24
USE mydb2
-- !query 24 schema
struct<>
-- !query 24 output



-- !query 25
SELECT mydb1.t1.i1 FROM t1
-- !query 25 schema
struct<>
-- !query 25 output
org.apache.spark.sql.AnalysisException
cannot resolve '`mydb1.t1.i1`' given input columns: [mydb2.t1.i1]; line 1 pos 7


-- !query 26
DROP DATABASE mydb1 CASCADE
-- !query 26 schema
struct<>
-- !query 26 output



-- !query 27
DROP DATABASE mydb2 CASCADE
-- !query 27 schema
struct<>
-- !query 27 output

