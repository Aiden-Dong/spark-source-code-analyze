-- Automatically generated by SQLQueryTestSuite
-- Number of queries: 15


-- !query 0
CREATE TEMPORARY VIEW grouping AS SELECT * FROM VALUES
  ("1", "2", "3", 1),
  ("4", "5", "6", 1),
  ("7", "8", "9", 1)
  as grouping(a, b, c, d)
-- !query 0 schema
struct<>
-- !query 0 output



-- !query 1
SELECT a, b, c, count(d) FROM grouping GROUP BY a, b, c GROUPING SETS (())
-- !query 1 schema
struct<a:string,b:string,c:string,count(d):bigint>
-- !query 1 output
NULL	NULL	NULL	3


-- !query 2
SELECT a, b, c, count(d) FROM grouping GROUP BY a, b, c GROUPING SETS ((a))
-- !query 2 schema
struct<a:string,b:string,c:string,count(d):bigint>
-- !query 2 output
1	NULL	NULL	1
4	NULL	NULL	1
7	NULL	NULL	1


-- !query 3
SELECT a, b, c, count(d) FROM grouping GROUP BY a, b, c GROUPING SETS ((c))
-- !query 3 schema
struct<a:string,b:string,c:string,count(d):bigint>
-- !query 3 output
NULL	NULL	3	1
NULL	NULL	6	1
NULL	NULL	9	1


-- !query 4
SELECT c1, sum(c2) FROM (VALUES ('x', 10, 0), ('y', 20, 0)) AS t (c1, c2, c3) GROUP BY GROUPING SETS (c1)
-- !query 4 schema
struct<c1:string,sum(c2):bigint>
-- !query 4 output
x	10
y	20


-- !query 5
SELECT c1, sum(c2), grouping(c1) FROM (VALUES ('x', 10, 0), ('y', 20, 0)) AS t (c1, c2, c3) GROUP BY GROUPING SETS (c1)
-- !query 5 schema
struct<c1:string,sum(c2):bigint,grouping(c1):tinyint>
-- !query 5 output
x	10	0
y	20	0


-- !query 6
SELECT c1, c2, Sum(c3), grouping__id
FROM   (VALUES ('x', 'a', 10), ('y', 'b', 20) ) AS t (c1, c2, c3)
GROUP  BY GROUPING SETS ( ( c1 ), ( c2 ) )
HAVING GROUPING__ID > 1
-- !query 6 schema
struct<c1:string,c2:string,sum(c3):bigint,grouping__id:int>
-- !query 6 output
NULL	a	10	2
NULL	b	20	2


-- !query 7
SELECT grouping(c1) FROM (VALUES ('x', 'a', 10), ('y', 'b', 20)) AS t (c1, c2, c3) GROUP BY GROUPING SETS (c1,c2)
-- !query 7 schema
struct<grouping(c1):tinyint>
-- !query 7 output
0
0
1
1


-- !query 8
SELECT -c1 AS c1 FROM (values (1,2), (3,2)) t(c1, c2) GROUP BY GROUPING SETS ((c1), (c1, c2))
-- !query 8 schema
struct<c1:int>
-- !query 8 output
-1
-1
-3
-3


-- !query 9
SELECT a + b, b, sum(c) FROM (VALUES (1,1,1),(2,2,2)) AS t(a,b,c) GROUP BY GROUPING SETS ( (a + b), (b))
-- !query 9 schema
struct<(a + b):int,b:int,sum(c):bigint>
-- !query 9 output
2	NULL	1
4	NULL	2
NULL	1	1
NULL	2	2


-- !query 10
SELECT a + b, b, sum(c) FROM (VALUES (1,1,1),(2,2,2)) AS t(a,b,c) GROUP BY GROUPING SETS ( (a + b), (b + a), (b))
-- !query 10 schema
struct<(a + b):int,b:int,sum(c):bigint>
-- !query 10 output
2	NULL	2
4	NULL	4
NULL	1	1
NULL	2	2


-- !query 11
SELECT c1 AS col1, c2 AS col2
FROM   (VALUES (1, 2), (3, 2)) t(c1, c2)
GROUP  BY GROUPING SETS ( ( c1 ), ( c1, c2 ) )
HAVING col2 IS NOT NULL
ORDER  BY -col1
-- !query 11 schema
struct<col1:int,col2:int>
-- !query 11 output
3	2
1	2


-- !query 12
SELECT a, b, c, count(d) FROM grouping GROUP BY WITH ROLLUP
-- !query 12 schema
struct<>
-- !query 12 output
org.apache.spark.sql.catalyst.parser.ParseException

extraneous input 'ROLLUP' expecting <EOF>(line 1, pos 53)

== SQL ==
SELECT a, b, c, count(d) FROM grouping GROUP BY WITH ROLLUP
-----------------------------------------------------^^^


-- !query 13
SELECT a, b, c, count(d) FROM grouping GROUP BY WITH CUBE
-- !query 13 schema
struct<>
-- !query 13 output
org.apache.spark.sql.catalyst.parser.ParseException

extraneous input 'CUBE' expecting <EOF>(line 1, pos 53)

== SQL ==
SELECT a, b, c, count(d) FROM grouping GROUP BY WITH CUBE
-----------------------------------------------------^^^


-- !query 14
SELECT c1 FROM (values (1,2), (3,2)) t(c1, c2) GROUP BY GROUPING SETS (())
-- !query 14 schema
struct<>
-- !query 14 output
org.apache.spark.sql.AnalysisException
expression '`c1`' is neither present in the group by, nor is it an aggregate function. Add to group by or wrap in first() (or first_value) if you don't care which value you get.;
